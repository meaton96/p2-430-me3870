{"version":3,"file":"client_modules_nav_Nav_jsxBundle.js","mappings":"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","sources":["webpack://kitchen-sync/./client/modules/nav/DesktopNav.jsx","webpack://kitchen-sync/./client/modules/nav/DesktopNavButton.jsx","webpack://kitchen-sync/./client/modules/nav/MobileNav.jsx","webpack://kitchen-sync/./client/modules/nav/MobileNavButton.jsx","webpack://kitchen-sync/./client/modules/nav/Nav.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from '../../utils/UserContext.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DesktopNavButton from \"./DesktopNavButton.jsx\";\r\n\r\nconst DesktopNav = ({ avatar, icons }) => {\r\n    const { isBackButtonActive, handleBackButtonClicked, setNewPostModalActive } = useContext(UserContext);\r\n    \r\n\r\n\r\n    return (\r\n        <div className={`nav-container px-3 is-hidden-mobile`}>\r\n            <div className=\"nav-avatar hide-at-1100\">\r\n                <div>\r\n                    <Link to=\"/profile\">\r\n                        <figure className=\"avatar-container\">\r\n                            <img\r\n                                src={avatar}\r\n                                alt=\"avatar\"\r\n                                className=\"avatar-image is-pointer\"\r\n                            />\r\n                        </figure>\r\n                    </Link>\r\n                </div>\r\n                <div className={`nav-back-btn-container ${isBackButtonActive ? '' : 'is-invisible'}`}>\r\n                    <button onClick={handleBackButtonClicked}>\r\n                        {'<'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <ul className=\"nav-list\">\r\n                <li className=\"hide-on-large-desktop \">\r\n                    <Link to=\"/profile\" className=\"nav-avatar-btn\">\r\n                        <img src={avatar} alt=\"avatar\" className=\"avatar-image\" />\r\n                    </Link>\r\n                </li>\r\n                <DesktopNavButton\r\n                    icon={icons.faHouse}\r\n                    text=\"Home\"\r\n                    to=\"/feed\"\r\n                />\r\n                <DesktopNavButton\r\n                    icon={icons.faUser}\r\n                    text=\"My Profile\"\r\n                    to={`/profile`}\r\n                />\r\n                <DesktopNavButton \r\n                    icon={icons.faSearch}\r\n                    text=\"Search Recipes\"\r\n                    to=\"/recipes/search\"\r\n                />\r\n                <DesktopNavButton\r\n                    icon={icons.faUtensils}\r\n                    text=\"My Recipes\"\r\n                    to=\"/recipes\"\r\n                />\r\n                <DesktopNavButton\r\n                    icon={icons.faDoorClosed}\r\n                    text=\"My Pantry\"\r\n                    to=\"/pantry\"\r\n                />\r\n                <DesktopNavButton\r\n                    icon={icons.faGear}\r\n                    text=\"Account Settings\"\r\n                    to=\"/account-settings\"\r\n                />\r\n                \r\n                \r\n                <li className=\"hide-on-mobile\">\r\n                    <button onClick={() => setNewPostModalActive(true)} className=\"post-btn\">\r\n                        <FontAwesomeIcon icon={icons.faPenToSquare} />\r\n                        <span className=\"hide-at-1100\">New Post</span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DesktopNav;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DesktopNavButton = ({ icon, text, to, addClass }) => {\r\n    return (\r\n        <li>\r\n            <Link to={to} className={addClass}>\r\n                <FontAwesomeIcon icon={icon} />\r\n                <span className=\"hide-at-1100\">{text}</span>\r\n            </Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default DesktopNavButton;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport MobileNavButton from \"./MobileNavButton.jsx\";\r\n\r\n\r\nconst MobileNav = ({ icons, setIsNavModalOpen, avatar }) => {\r\n\r\n    return (\r\n        <div className=\"nav-modal\" onClick={() => setIsNavModalOpen(false)}>\r\n            <div className=\"nav-modal-content\">\r\n                <button\r\n                    className=\"close-modal\"\r\n                    onClick={() => setIsNavModalOpen(false)}\r\n                >\r\n                    <FontAwesomeIcon icon={icons.faTimes} />\r\n                </button>\r\n               \r\n                <div className=\"nav-list\">\r\n                    \r\n                        <MobileNavButton\r\n                            icon={icons.faHouse}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/feed\"\r\n                        />\r\n                        <MobileNavButton\r\n                            icon={icons.faUser}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/feed\"\r\n                        />\r\n                        <MobileNavButton\r\n                            icon={icons.faSearch}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/recipes/search\"\r\n                        />\r\n                        <MobileNavButton\r\n                            icon={icons.faUtensils}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/recipes\"\r\n                        />\r\n                        <MobileNavButton\r\n                            icon={icons.faDoorClosed}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/pantry\"\r\n                        />\r\n                        <MobileNavButton\r\n                            icon={icons.faGear}\r\n                            setIsNavModalOpen={setIsNavModalOpen}\r\n                            to=\"/account-settings\"\r\n                        />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileNav;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MobileNavButton = ({ icon, text, to, addClass, setIsNavModalOpen }) => {\r\n    return (\r\n        <li onClick={() => {\r\n\r\n            setIsNavModalOpen(false);\r\n        }}>\r\n            <Link to={to} className={addClass} >\r\n                <FontAwesomeIcon icon={icon} />\r\n\r\n            </Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default MobileNavButton;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars, faHouse, faUser, faUtensils, faDoorClosed, faGear, faPenToSquare, faTimes, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DesktopNav from \"./DesktopNav.jsx\";\r\nimport MobileNav from \"./MobileNav.jsx\";\r\nimport { UserContext } from '../../utils/UserContext.js';\r\n\r\nconst Nav = () => {\r\n    const [isNavModalOpen, setIsNavModalOpen] = useState(false);\r\n    const { avatar } = useContext(UserContext);\r\n    const icons = {\r\n        faHouse,\r\n        faUser,\r\n        faUtensils,\r\n        faDoorClosed,\r\n        faGear,\r\n        faPenToSquare,\r\n        faTimes,\r\n        faSearch\r\n    }\r\n    return (\r\n        <>\r\n            {/* Hamburger button for mobile */}\r\n            <button\r\n                className=\"hamburger\"\r\n                onClick={() => setIsNavModalOpen(true)}\r\n            >\r\n                <FontAwesomeIcon icon={faBars} />\r\n            </button>\r\n\r\n            {/* Desktop Navigation */}\r\n            <DesktopNav\r\n                avatar={avatar}\r\n                //setNewPostModalActive={setNewPostModalActive}\r\n                icons={icons}\r\n            />\r\n\r\n            {/* Mobile Modal Navigation */}\r\n            {isNavModalOpen &&\r\n            <MobileNav  \r\n                icons={icons} \r\n                setIsNavModalOpen={setIsNavModalOpen} \r\n                avatar={avatar}\r\n            /> \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n"],"names":["React","useContext","UserContext","Link","FontAwesomeIcon","DesktopNavButton","DesktopNav","_ref","avatar","icons","_useContext","isBackButtonActive","handleBackButtonClicked","setNewPostModalActive","createElement","className","to","src","alt","concat","onClick","icon","faHouse","text","faUser","faSearch","faUtensils","faDoorClosed","faGear","faPenToSquare","addClass","MobileNavButton","MobileNav","setIsNavModalOpen","faTimes","useState","faBars","Nav","_useState","_useState2","_slicedToArray","isNavModalOpen","Fragment"],"sourceRoot":""}